name: Build

on:
  workflow_call:
    inputs:
      runs-on:
        type: string
        default: ubuntu-latest
      dotnet-version:
        type: string
        default: 6.0.x
      solution:
        type: string
        default: ./src/*.sln
      test-results:
        type: string
        default: ./test-results
    
jobs:
  build:
    name: Build
    runs-on: ${{ inputs.runs-on }}
    
    steps:        
      - name: Setup .NET ${{ inputs.dotnet-version }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ inputs.dotnet-version }}           
      
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          
      - name: Checkout
        uses: actions/checkout@v3      
        
      - name: Initialize SonarCloud scanner
        run: .\.sonar\scanner\dotnet-sonarscanner begin /k:"mihben_S-Train" /o:"mihben" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
      
      - name: Restore dependencies
        run: dotnet restore ${{ inputs.solution }}
        
      - name: Build
        run: dotnet build ${{ inputs.solution }} --no-restore
        
      - name: Test
        run: dotnet test ${{ inputs.solution }} --no-restore --collect "XPlat Code Coverage" --logger:"trx" --results-directory ${{ inputs.test-results }} --blame
        
      - name: Perform Code Analysis
        run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        
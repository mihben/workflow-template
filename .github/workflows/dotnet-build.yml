name: Build

on:
  workflow_call:
    inputs:
      runs-on:
        type: string
        default: ubuntu-latest
      dotnet-version:
        type: string
        default: 6.0.x
      solution:
        type: string
        default: ./src/*.sln
      test-results:
        type: string
        default: test-results
    secrets:
      SONAR_TOKEN:
        required: true
    
jobs:
  build:
    name: Build
    runs-on: ${{ inputs.runs-on }}
    
    steps:        
      - name: Setup .NET ${{ inputs.dotnet-version }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ inputs.dotnet-version }}           
      
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
          
      - name: Checkout
        uses: actions/checkout@v3  
        with:
          fetch-dept: 0
      
      - name: Restore dependencies
        run: dotnet restore ${{ inputs.solution }}
        
      - name: Build
        run: dotnet build ${{ inputs.solution }} --no-restore
        
      - name: Test
        run: dotnet test ${{ inputs.solution }} --no-restore --collect "XPlat Code Coverage" --logger:"trx" --results-directory ./${{ inputs.test-results }} --blame
        
      - name: Perform Code Analysis        
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=mihben
            -Dsonar.projectKey=mihben_S-Train
            -Dsonar.projectName=S-Train
            -Dsonar.tests=${{ inputs.test-results }}/*.trx
            -Dsonar.sources=src/          
            -Dsonar.sonar.cs.opencover.reportsPaths=${{ inputs.test-results }}/**/*.xml